#!/bin/perl -w

#
# Copyright (c) 2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident	"%Z%%M%	%I%	%E% SMI"
#
# This script was used to produce a spreadsheet containing the details of the
# files in the standard 5.005_03, the 5.005_03 files as shipped in S8, the files
# in standard 5.6.1 and a best-guess mapping of the 5.6.1 files into the S9
# tree.  The resulting CSV output is suitable for use with a spreadsheet.
#

use strict;
use IO::File;
use File::Basename;

# Read the input file lists for the 3 existing versions.
my (%files, %vers);
foreach my $flist (qw(500503 s8 561)) {
	my $fh = IO::File->new("flist.$flist")
	    || die("Can't open flist.$flist: $!\n");
	while (my $line = $fh->getline()) {
		chomp($line);
		next if ($line =~ /^\s*$/);
		my ($file, $path) = fileparse($line);
 		next if ($path =~ /\/SCCS/ || $file =~ /\.(?:o|so|a)$/);
		my $val = 'X';
		if ($path =~ s!^./(distrib)/!./!) {
			$val = $1;
		} elsif ($path =~ m!^./(?:i386|sparc)/!) {
			$val = 'arch';
		}
		$files{$path}{$file}{$flist} = $val;
	}
}

# Intuit where we think the 5.6.1 files should go in S9.
foreach my $path (sort(keys(%files))) {
	foreach my $file (sort(keys(%{$files{$path}}))) {
		my $f = $files{$path}{$file};
		if (exists($f->{500503}) && exists($f->{s8}) &&
		    exists($f->{561})) {
			$f->{s9} = $f->{s8};
		} elsif (exists($f->{500503}) && ! exists($f->{s8})) {
			$f->{s9} = 'delete';
		} elsif (exists($f->{561}) && ! exists($f->{500503})) {
			$f->{s9} = '?';
			$f->{new} = 'X';
		} elsif (exists($f->{s8}) && ! exists($f->{500503})) {
			$f->{s9} = $f->{s8} eq 'X' ? 'copy' : $f->{s8};
		}
	}
}

# Output the CSV spreadsheet.
print("Path,File,500503,s8,561,s9,new\n");
foreach my $path (sort(keys(%files))) {
	foreach my $file (sort(keys(%{$files{$path}}))) {
		print("$path,$file");
		foreach my $o (qw(500503 s8 561 s9 new)) {
			print(',');
			print($files{$path}{$file}{$o})
			    if (exists($files{$path}{$file}{$o}));
		}
		print("\n");
	}
}
