#
# CDDL HEADER START
#
# Copyright(c) 2007-2008 Intel Corporation. All rights reserved.
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at:
#	http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When using or redistributing this file, you may do so under the
# License only. No other modification of this header is permitted.
#
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright 2008 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms of the CDDL.
#
#
# ident	"%Z%%M%	%I%	%E% SMI"
#
#
# Driver.conf file for Intel 1Gb ethernet driver (igb)
#
# -------------------- Link Configuration --------------------
# The parameters of link configuration:
#
# adv_cap_autoneg
#	Advertise capability of auto-negotiation.
#	Allowed values:	0, 1
#	Default value:	1
#
# adv_cap_1000fdx
#	Advertise capability of 1000Mbps full duplex
#	Allowed values:	0, 1
#	Default value:	1
#
# adv_cap_100fdx
#	Advertise capability of 100Mbps full duplex
#	Allowed values:	0, 1
#	Default value:	1
#
# adv_cap_100hdx
#	Advertise capability of 100Mbps half duplex
#	Allowed values:	0, 1
#	Default value:	1
#
# adv_cap_10fdx
#	Advertise capability of 10Mbps full duplex
#	Allowed values:	0, 1
#	Default value:	1
#
# adv_cap_10hdx
#	Advertise capability of 10Mbps half duplex
#	Allowed values:	0, 1
#	Default value:	1
#
# There are two methods to configure the link:
#	autonegotiation or forced link
#
# The parameter "adv_cap_autoneg" is used to enable autonegotiation or disable
# it (forced link mode).
#
# If autonegotiation is enabled (the default mode), all the "adv_cap_*"
# parameters control which capabilities are advertised to the partner. The
# default is to advertise all the capabilities that the hardware supports.
# The advertised capabilities can also be restricted to a subset. It is not
# possible to advertise a capability that the hardware does not support.
#
# The autonegotiation process will then automatically select the fastest speed/
# duplex mode supported by both partners.
#
# If autonegotiation is disabled (forced link mode), the link speed/duplex is
# determined by the first link capability that is enabled, in highest-to-lowest
# speed/duplex order.
#
# For example, if adv_cap_1000fdx is enabled, all other values will be ignored;
# to force 10hdx mode, all the faster modes must be explicitly disabled.
#
# Note:
# 1. 1000M half duplex is not supported with igb.
# 2. 1000M speed is not supported with the forced link mode (the value of
#    adv_cap_1000fdx will be ignored).
# 3. The forced link mode may result in a non-working link or a half duplex
#    link. If forced link mode is used, both the partners should be forced to
#    the same link/speed mode.
#
# adv_cap_autoneg	= 1;
# adv_cap_1000fdx	= 1;
# adv_cap_100fdx	= 1;
# adv_cap_100hdx	= 1;
# adv_cap_10fdx		= 1;
# adv_cap_10hdx		= 1;
#
# -------------------- Jumbo Frame --------------------
# default_mtu
#	The size of the default MTU (payload without the ethernet header)
#	Allowed values:	1500 - 9000
#	Default value:	1500
#
# default_mtu		= 1500;
#
# -------------------- Flow Control --------------------
# flow_control
#	Ethernet flow control
#	Allowed values:	0 - Disable
#			1 - Receive only
#			2 - Transmit only
#			3 - Receive and transmit
#			4 - Use NVROM-programmed factory default setting
#	default value:	3
#
# flow_control		= 3;
#
# -------------------- Transmit/Receive Queues --------------------
# tx_queue_number
#	The number of the transmit queues
#	Allowed values:	1 - 4
#	Default value:	1
#
# tx_ring_size
#	The number of the transmit descriptors per transmit queue
#	Allowed values:	64 - 4096
#	Default value:	512
#
# rx_queue_number
#	The number of the receive queues
#	Allowed values:	1 - 4
#	Default value:	1
#
# rx_ring_size
#	The number of the receive descriptors per receive queue
#	Allowed values:	64 - 4096
#	Default value:	512
#
# Note: The final values of tx_queue_number and rx_queue_number are decided
# by the number of interrupt vectors obtained by the driver. They could be
# less than the specified values because of limited interrupt vector number.
#
# -------- How to set parameters for a particular interface ---------
# The example below shows how to locate the device path and set a parameter
# for a particular igb interface. (Using flow_control as an example)
#
# Use the following command to find out the device paths for igb,
#       more /etc/path_to_inst | grep igb
#
# For example, if you see,
#	"/pci@0,0/pci10de,5d@d/pci8086,0@0" 0 "igb"
#	"/pci@0,0/pci10de,5d@d/pci8086,0@0,1" 1 "igb"
#
# name = "pciex8086,10a7" parent = "/pci@0,0/pci10de,5d@d" unit-address = "0"
# flow_control = 1;
# name = "pciex8086,10a7" parent = "/pci@0,0/pci10de,5d@d" unit-address = "0,1"
# flow_control = 3;
