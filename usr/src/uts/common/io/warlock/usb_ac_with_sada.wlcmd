#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

# Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident	"%Z%%M%	%I%	%E% SMI"

# warlock command file

one	usb_ac_state
one     audio_ch
one     audio_apm_info
one     audio_state
one     am_apm_private


# unused functions

root	am_hw_state_change

root    audio_sup_devt_to_ch_type
root    audio_sup_get_qptr_data
root    audio_sup_open
root    audio_sup_close
root    audio_sup_rput
root    audio_sup_rsvc
root    audio_sup_wput
root    audio_sup_wsvc
root    audio_sup_ch_to_minor
root    audio_sup_construct_minor
root    audio_sup_devt_to_instance
root    audio_sup_free_qptr
root    audio_sup_get_channel_number
root    audio_sup_get_dip
root    audio_sup_get_info
root    audio_sup_get_max_chs
root    audio_sup_get_qptr_instance
root    audio_sup_set_qptr
root    audio_sup_save_audio_data
root	audio_sup_save_state
root	audio_sup_attach
root	audio_sup_detach
root	audio_sup_update_persist_key
root	audio_sup_getinfo

root    am_get_src_data
root    am_set_src_data
root    am_hw_state_change
root	am_get_audio
root	am_play_shutdown
root	am_send_audio

# threads
root 	am_diag_loopback_task
root	am_get_chinfo_task
root	am_get_mode_task
root	am_getinfo_task
root	am_mixer_task_acknack
root	am_mixerctl_getinfo_task
root	am_mixerctl_setinfo_task
root	am_multiple_open_task
root	am_sample_rate_task
root	am_set_chinfo_task
root	am_set_mode_task
root	am_setinfo_task
root	am_single_open_task
root	am_hw_task

### specify the usb_ac root functions
root 	usb_ac_dacf.c:usb_ac_mux_plumbing
root 	usb_ac_dacf.c:usb_ac_mux_unplumbing
root 	usb_ac_open
root 	usb_ac_close
root 	usb_ac_disconnect_event_cb
root 	usb_ac_reconnect_event_cb
root 	usb_ac_power
root 	usb_ac_lrput
root 	usb_ac_uwput

root	usb_ac_print_reg_data
root	usb_ac_am_restore_state


# function pointers
add	audio_ch::ch_rput		targets	am_rput
add	audio_ch::ch_rsvc		targets am_rsvc
add	audio_ch::ch_wput		targets am_wput
add	audio_ch::ch_wsvc		targets am_wsvc
add	audio_apm_info::apm_open 	targets am_open_audio
add	audio_apm_info::apm_close 	targets am_close_audio
add	audio_apm_info::apm_open 	targets am_open_audioctl
add	audio_apm_info::apm_close 	targets am_close_audioctl
add     audio_apm_info::apm_restore_state targets am_restore_state
add     audio_apm_info::apm_save_state  targets am_save_state


add	am_ad_entry::ad_setup		targets usb_ac_setup
add	am_ad_entry::ad_teardown	targets usb_ac_teardown
add	am_ad_entry::ad_set_config	targets	usb_ac_set_config
add	am_ad_entry::ad_set_format	targets usb_ac_set_format
add	am_ad_entry::ad_start_play	targets	usb_ac_start_play
add	am_ad_entry::ad_pause_play	targets usb_ac_pause_play
add	am_ad_entry::ad_stop_play	targets usb_ac_stop_play
add	am_ad_entry::ad_start_record	targets usb_ac_start_record
add	am_ad_entry::ad_stop_record	targets usb_ac_stop_record
add	am_ad_entry::ad_ioctl		targets warlock_dummy
add	am_ad_entry::ad_iocdata		targets warlock_dummy

add     bus_ops::bus_add_eventcall   	targets warlock_dummy
add     bus_ops::bus_get_eventcookie 	targets warlock_dummy
add     bus_ops::bus_intr_ctl        	targets warlock_dummy
add     bus_ops::bus_post_event      	targets warlock_dummy
add     bus_ops::bus_remove_eventcall   targets warlock_dummy
add     bus_ops::bus_config 		targets warlock_dummy
add     bus_ops::bus_unconfig 		targets warlock_dummy

add     am_ad_src_entry::ad_src_adjust	targets am_src2_adjust
add     am_ad_src_entry::ad_src_convert	targets am_src2_convert
add     am_ad_src_entry::ad_src_exit	targets am_src2_exit
add     am_ad_src_entry::ad_src_init	targets am_src2_init
add     am_ad_src_entry::ad_src_size	targets am_src2_size
add     am_ad_src_entry::ad_src_update	targets am_src2_update

add usb_ac_state_space::restore_func targets usb_ac_restore_audio_state


# we should never hold as_lock while jumping into another module
# and with this rule we *sometimes* get these
assert order audio_state::as_lock  audio_ch::ch_lock usb_ac_state::usb_ac_mutex

# this locking order catches problems when the framework holds locks
# over calling into the driver
#assert order usb_ac_state::usb_ac_mutex audio_state::as_lock  audio_ch::ch_lock


