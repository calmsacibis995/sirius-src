#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License                  
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2008 Sine Nomine Associates. All rights reserved.
# Use is subject to license terms.
#
#
# Copyright 2006 Neale Ferguson.  All rights reserved.
# Use is subject to license terms.
#
#	This Makefile defines all file modules and build rules for the
# directory uts/zSeries and its children. These are the source files which
# are specific to the zSeries processor.
#
#	The following two-level ordering must be maintained in this file.
#	  Lines are sorted first in order of decreasing specificity based on
#	  the first directory component. 
#
#	  Lines whose initial directory components are equal are sorted
#	  alphabetically by the remaining components.

#
#	Section 1a: C object build rules
#
$(OBJS_DIR)/%.o:		$(SRC)/common/fs/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(SRC)/common/util/zSeries/%.s
	$(COMPILE.s) -o $@ $<

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/dtrace/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/dtrace/%.s
	$(COMPILE.s) -o $@ $<

$(OBJS_DIR)/%.o:		$(UTSBASE)/sparc/zfs/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

#
# krtld compiled into unix
#

KRTLD_INC_PATH	= -I$(UTSBASE)/common/krtld -I$(UTSBASE)/zSeries/sys
KRTLD_INC_PATH	+= -I$(UTSBASE)/zSeries/$(SUBARCH_DIR)/krtld -I$(SRC)/common

KRTLD_CPPFLAGS_64	= -DELF_TARGET_S390 -DMODDIR_SUFFIX=\"s390x\"
KRTLD_CPPFLAGS		= $(KRTLD_CPPFLAGS_$(CLASS)) -D_KRTLD

#
# _DBOOT indicates that krtld is called from a dboot ELF section
#
$(OBJS_DIR)/kobj.o		:= CPPFLAGS += -D_DBOOT -DMODDIR_SUFFIX=\"s390x\"
$(OBJS_DIR)/kobj_bootflags.o	:= CPPFLAGS += -I$(SRC)/common

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/krtld/%.c
	$(COMPILE.c) $(KRTLD_INC_PATH) $(KRTLD_CPPFLAGS) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/krtld/%.s
	$(COMPILE.s) $(KRTLD_INC_PATH) $(KRTLD_CPPFLAGS) -o $@ $<

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/fs/proc/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/ml/%.s
	$(COMPILE.s) -o $@ $<

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/os/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/syscall/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/io/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/io/aac/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/io/amr/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/io/lsimega/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/io/scsi/targets/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:  $(DRVDIR)/%.c $(ADPU_HEADERS) $(DRVDIR)/adpu320.h \
		  $(DRVDIR)/release.h
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:  $(CHIMDIR)/hwm/%.c $(ADPU_HEADERS)
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:  $(CHIMDIR)/rsm/%.c $(ADPU_HEADERS)
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:  $(CHIMDIR)/xlm/%.c $(ADPU_HEADERS)	
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/io/ccw/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/os/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/pcbe/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/promif/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/zSeries/syscall/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/common/io/pci_pci/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/clock.o:		$(UTSBASE)/common/os/clock.c
	$(COMPILE.c) -U_MACHDEP -o $@ $(UTSBASE)/common/os/clock.c
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:		$(UTSBASE)/common/os/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:                $(UTSBASE)/zSeries/vm/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/%.o:                $(UTSBASE)/zSeries/cpu/%.c
	$(COMPILE.c) -o $@ $<
	$(CTFCONVERT_O)

$(OBJS_DIR)/zlib_obj.o:		$(ZLIB_OBJS:%=$(OBJS_DIR)/%)
	$(LD) -r --script=$(UTSBASE)/s390x/conf/modMapfile -o $@ \
	    $(ZLIB_OBJS:%=$(OBJS_DIR)/%)
	$(CTFMERGE) -t -f -L VERSION -o $@ $(ZLIB_OBJS:%=$(OBJS_DIR)/%)

#
#	Section 1b: Lint `object' build rules.
#
$(LINTS_DIR)/%.ln:		$(SRC)/common/fs/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(SRC)/common/util/%.s
	@($(LHEAD) $(LINT.s) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/dtrace/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/dtrace/%.s
	@($(LHEAD) $(LINT.s) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/fs/proc/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/fs/xmemfs/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/ml/%.s
	@($(LHEAD) $(LINT.s) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/os/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/syscall/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/io/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/io/aac/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/io/amr/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/io/lsimega/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/io/scsi/targets/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/io/vgatext/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/os/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/pcbe/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/promif/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/syscall/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/common/io/pci_pci/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/common/os/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(UTSBASE)/zSeries/vm/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(LINTS_DIR)/%.ln:		$(SRC)/common/atomic/%.c
	@($(LHEAD) $(LINT.c) $< $(LTAIL))

$(OBJS_DIR)/kobj.ln		:= CPPFLAGS += -D_DBOOT
$(OBJS_DIR)/kobj_bootflags.ln	:= CPPFLAGS += -I$(SRC)/common

$(OBJS_DIR)/$(MODULE)_depends.o:
		if [ ! -z $(MDFLAGS) ];								\
		then										\
			$(UTSBASE)/modDepends.ksh $(MDFLAGS) $(MODULE)_depends.s;		\
			$(COMPILE.s) $(MODULE)_depends.s -o $(OBJS_DIR)/$(MODULE)_depends.o;	\
			rm -f $(MODULE)_depends.s;						\
		fi

# HACK - Workaround for bug in 4.2.3
$(OBJS_DIR)/utssys.o := COPTIMIZE += -xO0
